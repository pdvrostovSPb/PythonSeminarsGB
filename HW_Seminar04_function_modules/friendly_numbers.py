# Дружественные числа
# Два различных натуральных числа называются дружественными,
# если первое из них равно сумме делителей второго числа,
# за исключением самого второго числа,
# а второе равно сумме делителей первого числа,
# за исключением самого первого числа.
# Требуется найти все пары дружественных чисел,
# оба из которых принадлежат промежутку от M до N.

# Входные данные
# В первой строке находятся целые числа M и N (1  ≤ M ≤ N ≤ 1 000 000).

# Выходные данные
# В каждой строке вывести по паре чисел через пробел.
# Первое число пары должно быть меньше второго.
# Строки должны быть отсортированы в порядке возрастания первого числа пары.
# Если пар дружественных чисел в промежутке нет, вывести "Absent".

# 
# Лимит времени 1 секунда
# 
# Лимит использования памяти 64 MiB
# Входные данные #1 content_copy
# 200 300
# Выходные данные #1 content_copy
# 220 284
# Объяснение: 220=1+2+4+71+142 (все делители числа 284);
# 284=1+2+4+5+10+11+20+22+44+55+110 (все делители числа 220).

def sum_divider(x):
    sum_divider = 0
    for i in range(1, x):
        if x % i == 0:
            sum_divider += i
    return sum_divider

with open('input_friendly.txt', 'r') as data_entry:
    data = data_entry.read().split(' ')
    m, n = int(data[0]), int(data[1])


lst = []
count = 0
for i in range(m, n):
    if m < sum_divider(i) < n:
        if sum_divider(sum_divider(i)) == i and i != sum_divider(i):
            lst = [i, sum_divider(i)]
            count += 1
            if count%2:
                with open('output_friendly.txt', 'a') as data_output:
                    data_output.write(str(lst) + '\n')
        
        


